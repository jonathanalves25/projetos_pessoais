{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/git/projetos_pessoais/calculadora-imc/src/components/Container.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport tw from 'tailwind-styled-components';\nimport { levels, calculateImc } from '../helpers/imc';\nimport { GridItem } from './GridItem';\nimport TextPrimary from './TextPrimary';\nimport TextSecondary from './TextSecondary';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Container = () => {\n  _s();\n\n  const ContainerInside = tw.div`\n        mx-auto\n        flex \n        max-w-4xl\n    `;\n  const LeftSide = tw.div`\n        flex-1 \n        mr-8\n    `;\n  const ContainerGrid = tw.div`\n        flex-1 \n        grid\n        grid-cols-2 \n        gap-5\n    `;\n  const RightSide = tw.div`\n        flex \n        flex-1 \n        ml-8\n    `;\n  const InputField = tw.input`\n        w-full \n        mb-8 \n        p-4 \n        border-0 \n        border-blue-200 \n        outline-none \n        border-b-2\n    `;\n  const RightBig = tw.div`\n\n    `;\n  const RightArrow = tw.div`\n\n    `;\n  const [heightField, setHeightField] = useState(0);\n  const [weightField, setWeightField] = useState(0);\n  const [toShow, setToShow] = useState(null);\n\n  const handleCalculateButton = () => {\n    if (heightField && weightField) {\n      setToShow(calculateImc(heightField, weightField));\n    } else {\n      alert('digite todos os campos');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContainerInside, {\n    children: [/*#__PURE__*/_jsxDEV(LeftSide, {\n      children: [/*#__PURE__*/_jsxDEV(TextPrimary, {\n        text: \"Calcule o seu IMC.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextSecondary, {\n        text: \" IMC \\xE9 a sigla para \\xCDndice de Massa Corp\\xF3rea, parametro adotado pela Organizacao Mundial de Sa\\xFAde para calcular o peso ideal de cada pessoa. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"number\",\n        value: heightField > 0 ? heightField : '',\n        placeholder: \"Digite a sua altura. Ex: 1.5 em metros\",\n        onChange: e => setHeightField(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"number\",\n        value: weightField > 0 ? weightField : '',\n        placeholder: \"Digite o seu peso. Ex: 75.3 em quilos\",\n        onChange: e => setWeightField(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCalculateButton,\n        text: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n      children: [!toShow && /*#__PURE__*/_jsxDEV(ContainerGrid, {\n        children: levels.map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n          item: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), toShow && /*#__PURE__*/_jsxDEV(RightBig, {\n        children: [/*#__PURE__*/_jsxDEV(RightArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          item: toShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"/0cvjYsgCQY1NJ/tjcRDXO6VvjI=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["useState","tw","levels","calculateImc","GridItem","TextPrimary","TextSecondary","Button","Container","ContainerInside","div","LeftSide","ContainerGrid","RightSide","InputField","input","RightBig","RightArrow","heightField","setHeightField","weightField","setWeightField","toShow","setToShow","handleCalculateButton","alert","e","parseFloat","target","value","map","item","index"],"sources":["/Users/johnny/git/projetos_pessoais/calculadora-imc/src/components/Container.tsx"],"sourcesContent":["import { useState } from 'react';\nimport tw from 'tailwind-styled-components'\nimport {levels, calculateImc, Level} from '../helpers/imc'\nimport {GridItem} from './GridItem'\nimport TextPrimary from './TextPrimary'\nimport TextSecondary from './TextSecondary'\nimport Button from './Button'\n\n\nexport const Container = () => {\n\n    const ContainerInside:any = tw.div`\n        mx-auto\n        flex \n        max-w-4xl\n    `\n\n    const LeftSide:any = tw.div`\n        flex-1 \n        mr-8\n    `\n\n    const ContainerGrid:any = tw.div`\n        flex-1 \n        grid\n        grid-cols-2 \n        gap-5\n    `\n\n    const RightSide:any = tw.div`\n        flex \n        flex-1 \n        ml-8\n    `\n\n    const InputField:any = tw.input`\n        w-full \n        mb-8 \n        p-4 \n        border-0 \n        border-blue-200 \n        outline-none \n        border-b-2\n    `\n\n    const RightBig:any = tw.div`\n\n    `\n\n    const RightArrow:any = tw.div`\n\n    `\n\n    const [heightField, setHeightField] = useState<number>(0);\n    const [weightField, setWeightField] = useState<number>(0);\n    const [toShow, setToShow] = useState<Level | null>(null);\n\n    const handleCalculateButton = () => {\n        if(heightField && weightField) {\n            setToShow(calculateImc(heightField, weightField));\n        } else {\n            alert('digite todos os campos')\n        }\n    }\n\n    return (\n   \n        <ContainerInside>\n            <LeftSide>\n                <TextPrimary text=\"Calcule o seu IMC.\"/>\n                <TextSecondary text=\"\n                    IMC é a sigla para Índice de Massa Corpórea, parametro adotado pela Organizacao Mundial de Saúde para calcular\n                    o peso ideal de cada pessoa.\n                \"/>\n\n                <InputField type=\"number\" value={heightField > 0 ? heightField : ''} placeholder=\"Digite a sua altura. Ex: 1.5 em metros\" onChange={(e: { target: { value: string; }; }) => setHeightField(parseFloat(e.target.value))} /> \n                <InputField type=\"number\" value={weightField > 0 ? weightField : ''} placeholder=\"Digite o seu peso. Ex: 75.3 em quilos\" onChange={(e: { target: { value: string; }; }) => setWeightField(parseFloat(e.target.value))} /> \n                \n                <Button onClick={handleCalculateButton} text=\"Calcular\"/>\n            </LeftSide>\n            <RightSide>\n                {!toShow &&\n                    <ContainerGrid>\n                        {levels.map((item, index) => (\n                            <GridItem key={index} item={item}/>\n                            \n                        ))}\n                    </ContainerGrid>\n                }\n\n                {toShow &&\n                    <RightBig>\n                        <RightArrow>\n                        </RightArrow>\n                        <GridItem item={toShow}/>\n                    </RightBig>\n                }\n            </RightSide>\n        </ContainerInside>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}